{
  "Parameters": {
    "modelPackageName": {
      "Type": "String"
    },
    "endpointInstanceType": {
      "Type": "String",
      "Default": "ml.m5.xlarge"
    },
    "endpointInstanceCount": {
      "Type": "Number",
      "Default": 1,
      "MinValue": 1
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Resources": {
    "SageMakerModelExecutionRoleB13CA9F3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "sagemaker.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSageMakerFullAccess"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/SageMakerModelExecutionRole/Resource"
      }
    },
    "DataFunctionRole310517C7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/DataFunctionRole/Resource"
      }
    },
    "DataFunctionRoleDefaultPolicyF2A93448": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sagemaker:CreateModel",
                "sagemaker:DeleteModel",
                "sagemaker:DescribeModelPackage"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:sagemaker:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":model/mlops-e2e*"
                    ]
                  ]
                },
                {
                  "Ref": "modelPackageName"
                }
              ]
            },
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SageMakerModelExecutionRoleB13CA9F3",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "DataFunctionRoleDefaultPolicyF2A93448",
        "Roles": [
          {
            "Ref": "DataFunctionRole310517C7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/DataFunctionRole/DefaultPolicy/Resource"
      }
    },
    "PipelineModelFunction4564DB2E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "b2c386a770cde0029c22a82f95291bb751965e54608f772976faf43030535498.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "DataFunctionRole310517C7",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "Timeout": 60
      },
      "DependsOn": [
        "DataFunctionRoleDefaultPolicyF2A93448",
        "DataFunctionRole310517C7"
      ],
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelFunction/Resource",
        "aws:asset:path": "asset.b2c386a770cde0029c22a82f95291bb751965e54608f772976faf43030535498",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "PipelineModelCustomResourceProviderframeworkonEventServiceRole35E3C3F7": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelCustomResourceProvider/framework-onEvent/ServiceRole/Resource"
      }
    },
    "PipelineModelCustomResourceProviderframeworkonEventServiceRoleDefaultPolicyA0768712": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineModelFunction4564DB2E",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineModelFunction4564DB2E",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineModelCustomResourceProviderframeworkonEventServiceRoleDefaultPolicyA0768712",
        "Roles": [
          {
            "Ref": "PipelineModelCustomResourceProviderframeworkonEventServiceRole35E3C3F7"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelCustomResourceProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "PipelineModelCustomResourceProviderframeworkonEvent58E80038": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "PipelineModelCustomResourceProviderframeworkonEventServiceRole35E3C3F7",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (Deployment-mlops-e2e/PipelineModelCustomResourceProvider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "PipelineModelFunction4564DB2E",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs18.x",
        "Timeout": 900
      },
      "DependsOn": [
        "PipelineModelCustomResourceProviderframeworkonEventServiceRoleDefaultPolicyA0768712",
        "PipelineModelCustomResourceProviderframeworkonEventServiceRole35E3C3F7"
      ],
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelCustomResourceProvider/framework-onEvent/Resource",
        "aws:asset:path": "asset.8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "PipelineModelCustomResourceProviderframeworkonEventLogRetentionADDFA9E7": {
      "Type": "Custom::LogRetention",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn"
          ]
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "PipelineModelCustomResourceProviderframeworkonEvent58E80038"
              }
            ]
          ]
        },
        "RetentionInDays": 1
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelCustomResourceProvider/framework-onEvent/LogRetention/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": {
          "Fn::FindInMap": [
            "DefaultCrNodeVersionMap",
            {
              "Ref": "AWS::Region"
            },
            "value"
          ]
        },
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
      ],
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
        "aws:asset:path": "asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "PipelineModelCustomResource": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "PipelineModelCustomResourceProviderframeworkonEvent58E80038",
            "Arn"
          ]
        },
        "modelPackageName": {
          "Ref": "modelPackageName"
        },
        "sagemakerExecutionRole": {
          "Fn::GetAtt": [
            "SageMakerModelExecutionRoleB13CA9F3",
            "Arn"
          ]
        },
        "projectName": "mlops-e2e"
      },
      "DependsOn": [
        "SageMakerModelExecutionRoleB13CA9F3"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/PipelineModelCustomResource/Default"
      }
    },
    "SageMakerModelEndpointConfig": {
      "Type": "AWS::SageMaker::EndpointConfig",
      "Properties": {
        "ProductionVariants": [
          {
            "InitialInstanceCount": {
              "Ref": "endpointInstanceCount"
            },
            "InitialVariantWeight": 1,
            "InstanceType": {
              "Ref": "endpointInstanceType"
            },
            "ModelName": {
              "Ref": "PipelineModelCustomResource"
            },
            "VariantName": "AllTraffic"
          }
        ]
      },
      "DependsOn": [
        "PipelineModelCustomResource"
      ],
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/SageMakerModelEndpointConfig"
      }
    },
    "SageMakerModelEndpoint": {
      "Type": "AWS::SageMaker::Endpoint",
      "Properties": {
        "EndpointConfigName": {
          "Fn::GetAtt": [
            "SageMakerModelEndpointConfig",
            "EndpointConfigName"
          ]
        }
      },
      "DependsOn": [
        "SageMakerModelEndpointConfig"
      ],
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/SageMakerModelEndpoint"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02Py26DMBBFvyV7Z0qTLrJtULPqA5EPQBMzIAMeI4+dqEL8e4VJqqzu1dw589jBIYNsgzfZ6rrfDuYC0zmg7lXecIEeLQXyCm9STQYtTKUbaMmSFm4w+je1JjerAe2lxopdTZ3Ad5JTZB2MYyX7CkUoCLwvomQPx6h7CkcUuqMw5Q3/Ew8zq8G1Ap+uLSkQr9OwJYs9+YR8cD06wyF33JhWPVXmWZUkLnpNKu09B2wNt0pHCc5W/h4KFN5dTU0+/fdA8oa/cBwXIE/Ac/ITwxjD4nLHtVlPXZ6HTl6urwfYZfC26cSYrY8cjCUoV/0DGk2PB3kBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "Deployment-mlops-e2e/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Mappings": {
    "DefaultCrNodeVersionMap": {
      "af-south-1": {
        "value": "nodejs16.x"
      },
      "ap-east-1": {
        "value": "nodejs16.x"
      },
      "ap-northeast-1": {
        "value": "nodejs16.x"
      },
      "ap-northeast-2": {
        "value": "nodejs16.x"
      },
      "ap-northeast-3": {
        "value": "nodejs16.x"
      },
      "ap-south-1": {
        "value": "nodejs16.x"
      },
      "ap-south-2": {
        "value": "nodejs16.x"
      },
      "ap-southeast-1": {
        "value": "nodejs16.x"
      },
      "ap-southeast-2": {
        "value": "nodejs16.x"
      },
      "ap-southeast-3": {
        "value": "nodejs16.x"
      },
      "ca-central-1": {
        "value": "nodejs16.x"
      },
      "cn-north-1": {
        "value": "nodejs16.x"
      },
      "cn-northwest-1": {
        "value": "nodejs16.x"
      },
      "eu-central-1": {
        "value": "nodejs16.x"
      },
      "eu-central-2": {
        "value": "nodejs16.x"
      },
      "eu-north-1": {
        "value": "nodejs16.x"
      },
      "eu-south-1": {
        "value": "nodejs16.x"
      },
      "eu-south-2": {
        "value": "nodejs16.x"
      },
      "eu-west-1": {
        "value": "nodejs18.x"
      },
      "eu-west-2": {
        "value": "nodejs18.x"
      },
      "eu-west-3": {
        "value": "nodejs18.x"
      },
      "me-central-1": {
        "value": "nodejs16.x"
      },
      "me-south-1": {
        "value": "nodejs16.x"
      },
      "sa-east-1": {
        "value": "nodejs16.x"
      },
      "us-east-1": {
        "value": "nodejs16.x"
      },
      "us-east-2": {
        "value": "nodejs16.x"
      },
      "us-gov-east-1": {
        "value": "nodejs16.x"
      },
      "us-gov-west-1": {
        "value": "nodejs16.x"
      },
      "us-iso-east-1": {
        "value": "nodejs14.x"
      },
      "us-iso-west-1": {
        "value": "nodejs14.x"
      },
      "us-isob-east-1": {
        "value": "nodejs14.x"
      },
      "us-west-1": {
        "value": "nodejs16.x"
      },
      "us-west-2": {
        "value": "nodejs16.x"
      }
    }
  },
  "Outputs": {
    "ModelEndpointOutput": {
      "Value": {
        "Ref": "SageMakerModelEndpoint"
      },
      "Export": {
        "Name": "ModelHostingEndpoint-mlops-e2e"
      }
    },
    "ModelEndpointNameOutput": {
      "Value": {
        "Fn::GetAtt": [
          "SageMakerModelEndpoint",
          "EndpointName"
        ]
      },
      "Export": {
        "Name": "ModelHostingEndpoint-Name-mlops-e2e"
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}
